{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "defaultValue": "Get-IncidentDetails",
            "type": "String",
            "metadata": {
                "description": "Name of the logic app."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location of the logic app."
            }
        },
        "azuresentinel_Connection_Name": {
            "defaultValue": "azuresentinel",
            "type": "String",
            "metadata": {
                "description": "Azure Sentinel connection"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('azuresentinel_Connection_Name')]",
            "location": "[parameters('location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'azuresentinel')]"
                },
                "displayName": "[parameters('azuresentinel_Connection_Name')]"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-06-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('azuresentinel_Connection_Name')]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "incidentId": {},
                                        "lastSync": {}
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    },
                    "actions": {
                        "Compose_Incident_ARM_ID": {
                            "inputs": "/subscriptions/674bca0a-b6ce-4991-9c75-82ef14b0360d/resourceGroups/security/providers/Microsoft.OperationalInsights/workspaces/DemoSecurityLogs/providers/Microsoft.SecurityInsights/Incidents/@{triggerBody()?['incidentId']}",
                            "runAfter": {},
                            "type": "Compose"
                        },
                        "Get_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@{outputs('Compose_Incident_ARM_ID')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents"
                            },
                            "runAfter": {
                                "Compose_Incident_ARM_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Get_comments_since_last_sync": {
                            "inputs": {
                                "from": "@body('Get_incident')?['properties']?['Comments']",
                                "where": "@greater(formatDateTime(item()?['properties']?['createdTimeUtc'], 'yyyy-MM-dd HH:mm:ss'), triggerBody()?['lastSync'])"
                            },
                            "runAfter": {
                                "Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "Get_non-SNOW_comments": {
                            "inputs": {
                                "from": "@body('Get_comments_since_last_sync')",
                                "where": "@not(contains(item()?['properties']?['message'], '(Work notes)'))"
                            },
                            "runAfter": {
                                "Get_comments_since_last_sync": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "Compose_messages_properties": {
                            "inputs": {
                                "from": "@body('Get_non-SNOW_comments')",
                                "select": {
                                    "author": "@item()?['properties']?['author']?['userPrincipalName']",
                                    "createdTimeUTC": "@item()?['properties']?['createdTimeUtc']",
                                    "message": "@item()?['properties']?['message']"
                                }
                            },
                            "runAfter": {
                                "Get_non-SNOW_comments": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select"
                        },
                        "Compose_incident_details": {
                            "description": "If owner doesn't have email address, UPN is returned",
                            "inputs": {
                                "owner": "@if(empty(body('Get_incident')?['properties']?['owner']?['email']), body('Get_incident')?['properties']?['owner']?['userPrincipalName'], body('Get_incident')?['properties']?['owner']?['email'])",
                                "severity": "@body('Get_incident')?['properties']?['severity']",
                                "status": "@body('Get_incident')?['properties']?['status']"
                            },
                            "runAfter": {
                                "Compose_messages_properties": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Response": {
                            "inputs": {
                                "body": {
                                    "comments": "@body('Compose_messages_properties')",
                                    "details": "@outputs('Compose_incident_details')"
                                },
                                "headers": {
                                    "Conten-Type": "application/json"
                                },
                                "statusCode": 200
                            },
                            "kind": "Http",
                            "runAfter": {
                                "Compose_incident_details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response"
                        }
            
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuresentinel_Connection_Name'))]",
                                "connectionName": "[parameters('azuresentinel_Connection_Name')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }

    ],
    "outputs": {

        "logicAppUrl": {
            "type": "string",
            "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows/', parameters('logicAppName')), '/triggers/manual'), '2016-06-01').value]"
        }
    }
}